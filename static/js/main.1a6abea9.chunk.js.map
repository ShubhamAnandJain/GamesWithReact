{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","step","setState","slice","concat","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"iPAIA,SAASA,EAAOC,GACf,OACC,4BAAQC,UAAY,SAASC,QAAWF,EAAME,SAC7CF,EAAMG,OAKT,SAASC,EAAgBC,GAYxB,IAXA,IAAMC,EAAQ,CACb,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGEC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CAAC,IAAD,cACpBD,EAAMC,GADc,GAC7BE,EAD6B,KAC3BC,EAD2B,KACzBC,EADyB,KAEpC,GAAGN,EAAQI,IAAMJ,EAAQI,IAAMJ,EAAQK,IAAML,EAAQI,IAAMJ,EAAQM,GAClE,OAAON,EAAQI,GAGjB,OAAO,K,IAGFG,E,2KAESL,GAAI,IAAD,OACd,OACC,kBAACR,EAAD,CAAQI,MAASU,KAAKb,MAAMK,QAAQE,GACpCL,QAAW,kBAAM,EAAKF,MAAME,QAAQK,Q,+BAMrC,OACE,6BACE,yBAAKN,UAAU,aACZY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKb,UAAU,aACZY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKb,UAAU,aACZY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,S,GA1BTC,IAAMC,WAiCpBC,E,kDAEJ,WAAYjB,GAAO,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACZC,QAAS,CAAC,CACTd,QAASe,MAAM,GAAGC,KAAK,QAExBC,SAAS,EACTC,WAAY,GAPI,E,mDAWXC,GACNX,KAAKY,SAAS,CACbF,WAAYC,EACZF,QAAUE,EAAK,IAAO,M,kCAIZjB,GACX,IAAMY,EAAUN,KAAKK,MAAMC,QAAQO,MAAM,EAAEb,KAAKK,MAAMK,WAAW,GAE3DlB,EADUc,EAAQA,EAAQX,OAAO,GACfH,QAAQqB,QAC7BtB,EAAgBC,IAAYA,EAAQE,KAGvCF,EAAQE,GAAKM,KAAKK,MAAMI,QAAU,IAAM,IACxCT,KAAKY,SAAS,CACbN,QAASA,EAAQQ,OAAO,CAAC,CACxBtB,QAASA,KAEVkB,WAAYJ,EAAQX,OACpBc,SAAUT,KAAKK,MAAMI,a,+BAIb,IAkBLM,EAlBI,OAEFT,EAAUN,KAAKK,MAAMC,QACrBU,EAAUV,EAAQN,KAAKK,MAAMK,YAC7BO,EAAS1B,EAAgByB,EAAQxB,SAEjC0B,EAAQZ,EAAQa,KAAI,SAACR,EAAKS,GAC/B,IAAMC,EAAOD,EACb,eAAiBA,EACjB,mBACA,OACC,wBAAIE,IAAOF,GACX,4BAAQ/B,QAAW,kBAAM,EAAKkC,OAAOH,KAAQC,OAc9C,OANAN,EADEE,EACO,WAAWA,EAGX,iBAAmBjB,KAAKK,MAAMI,QAAU,IAAM,KAIrD,yBAAKrB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACW,EAAD,CACCP,QAAWwB,EAAQxB,QACnBH,QAAW,SAACK,GAAD,OAAO,EAAK8B,YAAY9B,OAGtC,yBAAKN,UAAU,aACb,6BAAM2B,GACN,4BAAKG,S,GAzEIhB,IAAMC,WAkFzBsB,IAASC,OACP,kBAACtB,EAAD,MACAuB,SAASC,eAAe,W","file":"static/js/main.1a6abea9.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props){\n\treturn (\n\t\t<button className = \"square\" onClick = {props.onClick}>\n\t\t{props.value}\n\t\t</button>\n\t);\n}\n\nfunction calculateWinner(squares){\n\tconst lines = [\n\t\t[0,1,2],\n\t\t[3,4,5],\n\t\t[6,7,8],\n\t\t[0,3,6],\n\t\t[1,4,7],\n\t\t[2,5,8],\n\t\t[0,4,8],\n\t\t[2,4,6],\n\t];\n\n\tfor(let i = 0; i < lines.length; i++){\n\t\tconst [a,b,c] = lines[i];\n\t\tif(squares[a] && squares[a] == squares[b] && squares[a] == squares[c]){\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\treturn null;\n}\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    return (\n\t    <Square value = {this.props.squares[i]}\n\t    onClick = {() => this.props.onClick(i)}\n\t    />\n\t);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n\n  constructor(props){\n  \tsuper(props);\n  \tthis.state = {\n  \t\thistory: [{\n  \t\t\tsquares: Array(9).fill(null),\n  \t\t}],\n  \t\txIsNext: true,\n  \t\tstepNumber: 0,\n  \t};\n  }\n\n  jumpTo(step){\n  \tthis.setState({\n  \t\tstepNumber: step,\n  \t\txIsNext: (step%2) === 0,\n  \t});\n  }\n\n  handleClick(i){\n  \tconst history = this.state.history.slice(0,this.state.stepNumber+1);\n  \tconst current = history[history.length-1];\n  \tconst squares = current.squares.slice();\n  \tif(calculateWinner(squares) || squares[i]){\n  \t\treturn;\n  \t}\n  \tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n  \tthis.setState({\n  \t\thistory: history.concat([{\n  \t\t\tsquares: squares,\n  \t\t}]),\n  \t\tstepNumber: history.length,\n  \t\txIsNext: !this.state.xIsNext,\n  \t});\n  }\n\n  render() {\n\n  \tconst history = this.state.history;\n  \tconst current = history[this.state.stepNumber];\n  \tconst winner = calculateWinner(current.squares);\n\n  \tconst moves = history.map((step,move) => {\n  \t\tconst desc = move ?\n  \t\t'Go to move #' + move : \n  \t\t'Go to game start';\n  \t\treturn (\n  \t\t\t<li key = {move}>\n  \t\t\t<button onClick = {() => this.jumpTo(move)}>{desc}\n  \t\t\t</button>\n  \t\t\t</li>\n  \t\t\t);\n  \t});\n\n  \tlet status;\n  \tif(winner){\n  \t\tstatus = 'Winner: '+winner;\n  \t}\n  \telse{\n  \t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n  \t}\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n          \tsquares = {current.squares}\n          \tonClick = {(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}